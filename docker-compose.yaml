services:
  redis:
    image: redis
    volumes:
      - redis_data:/data
    expose:
      - 6379
    network_mode: "host"
  livekit:
    image: livekit/livekit-server:v1.8.0
    command: --config /etc/livekit.yaml
    restart: unless-stopped
    network_mode: "host"
    volumes:
      - ./docker/livekit/livekit.yaml:/etc/livekit.yaml
  egress:
    image: livekit/egress:v1.8
    environment:
      - EGRESS_CONFIG_FILE=/egress.yaml
    restart: unless-stopped
    network_mode: "host"
    volumes:
      - ./api/storage/app/private/recordings:/out
      - ./docker/livekit/egress.yaml:/egress.yaml
  nginx:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    volumes:
      - ./docker/web/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/web/certs/svca.local.pem:/etc/nginx/ssl/svca.local.pem
      - ./docker/web/certs/svca.local-key.pem:/etc/nginx/ssl/svca.local-key.pem
      - ./docker/web/certs/api.svca.local.pem:/etc/nginx/ssl/api.svca.local.pem
      - ./docker/web/certs/api.svca.local-key.pem:/etc/nginx/ssl/api.svca.local-key.pem
      - ./docker/web/certs/livekit.svca.local.pem:/etc/nginx/ssl/livekit.svca.local.pem
      - ./docker/web/certs/livekit.svca.local-key.pem:/etc/nginx/ssl/livekit.svca.local-key.pem
    restart: always
    ports:
      - 80:80
    network_mode: "host"
  php:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    network_mode: "host"
  mysql:
    image: mysql/mysql-server:8.0
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysql_data:/var/lib/mysql
    network_mode: "host"

volumes:
  redis_data:
  mysql_data:
